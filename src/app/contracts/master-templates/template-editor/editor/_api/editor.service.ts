import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { EMPTY, Observable, of, throwError } from 'rxjs';
import { catchError, map } from 'rxjs/operators';
import { environment } from 'src/environments/environment';
export interface WrappedValueDto<TValue> {
  value: TValue;
}
@Injectable()
export class EditorService {
  baseUrl = environment.apiUrl;

  constructor(private httpClient: HttpClient) { }

  getTemplateMock(): string {
    const documentAsBase64 = `
    
    `;
    return documentAsBase64;
  }

  getTemplate(templateId: number): Observable<Blob>  {
    const endpoint = `${this.baseUrl}/api/AgreementTemplate/${templateId}/document-file/latest-template-version/true`;

    return this.httpClient.get(endpoint, {
      responseType: 'blob'
    }).pipe(
      map(res => res),
      catchError(error => throwError(error))
    );
  }

  upsertTemplate(templateId: number, fileContent: WrappedValueDto<string>) {
    const endpoint = `${this.baseUrl}/api/AgreementTemplate/${templateId}/document-file/false`;
    return this.httpClient.put(endpoint, fileContent);
  }
}
